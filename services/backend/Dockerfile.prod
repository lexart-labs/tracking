# --- Etapa 1: Builder ---
# Esta etapa instala dependencias y compila los assets
FROM php:8.1.9-fpm-alpine3.16 AS builder

# Instala dependencias del sistema para extensiones de PHP y Composer
RUN apk add --no-cache --update \
    $PHPIZE_DEPS \
    zlib-dev \
    libmemcached-dev \
    cyrus-sasl-dev

# Instala las extensiones de PHP
RUN docker-php-ext-install mysqli pdo_mysql \
    && pecl install memcached \
    && docker-php-ext-enable memcached

# Copia el binario de Composer
COPY --from=composer:2.2 /usr/bin/composer /usr/bin/composer

# Establece el directorio de trabajo dentro del contenedor
WORKDIR /var/www/html

# --- CAMBIO #1 ---
# Copia los archivos de dependencias desde el subdirectorio 'app' del host.
COPY app/composer.json app/composer.lock ./

# Instala las dependencias de producción de Composer.
# Esto solo se re-ejecutará si los archivos composer.* cambian, optimizando el caché.
RUN composer install --no-dev --no-interaction --prefer-dist \
    && composer dump-autoload --no-dev --optimize

# --- CAMBIO #2 ---
# Copia el resto del código de la aplicación desde el subdirectorio 'app'.
# El './' al final asegura que se copia el CONTENIDO de 'app' y no la carpeta en sí.
COPY app/. .

# --- Etapa 2: Imagen Final de Producción ---
FROM php:8.1.9-fpm-alpine3.16

# Crea un grupo y usuario no-root para ejecutar la aplicación
RUN addgroup -g 1000 -S www && \
    adduser -u 1000 -S www -G www

# Instala solo las librerías de TIEMPO DE EJECUCIÓN necesarias
RUN apk add --no-cache --update \
    libmemcached-libs \
    zlib

# Copia las configuraciones y extensiones de PHP desde la etapa 'builder'
COPY --from=builder /usr/local/etc/php/conf.d/ /usr/local/etc/php/conf.d/
COPY --from=builder /usr/local/lib/php/extensions/ /usr/local/lib/php/extensions/

# Establece el directorio de trabajo
WORKDIR /var/www/html

# Copia el código de la aplicación y las dependencias ya instaladas desde la etapa 'builder'
# El --chown establece los permisos correctos durante la copia, lo cual es más eficiente.
COPY --from=builder --chown=www:www /var/www/html /var/www/html

# Cambia al usuario no-root por seguridad
USER www

# Expone el puerto por defecto de PHP-FPM
EXPOSE 9000

# Comando por defecto para iniciar el servicio
CMD ["php-fpm"]